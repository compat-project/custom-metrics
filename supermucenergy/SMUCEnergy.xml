<!-- version is the file format version -->
<metricdefinitions version="1">

    <!-- id is the internal name for this metric, as used in the .map XML -->
    <metric id="com.allinea.metrics.compat.supermuc.power">
        <!-- Specify whether this metric is always, default_yes, default_no, or never enabled -->
        <enabled>default_yes</enabled>
        <!-- The units this metric is measured in. -->
        <units>W</units>
        <!-- Data type used to store the sample values, uint64_t or double -->
        <dataType>double</dataType>
        <!-- The domain the metric is to be sampled in, only time is supported. -->
        <domain>time</domain>

        <onePerNode>true</onePerNode>

        <!-- Example source
             Specifies the source of data for this metric, i.e. a function in a
             shared library.

             The function signature depends on the dataType:
             - uint64_t:  int function(metric_id_t metricId,
                                       struct timespec* inCurrentSampleTime,
                                       uint64_t *outValue);
             - double:    int function(metric_id_t metricId,
                                       struct timespec* inCurrentSampleTime,
                                       double   *outValue);

            If the result is undefined for some reason the function may return
            the special sentinel value ~0 (unsigned integers) or Nan (floating point)

            Return value is 0 if success, -1 if failure (and set errno)

            If divideBySampleTime is true then the values returned by outValue
            will be divided by the sample interval to get the final value.  -->
        <source ref="com.allinea.metrics.compat.supermuc.energy_src"
                functionName="sample_IBM_energy"
                divideBySampleTime="false"/>

        <!-- Display attributes used by the GUI -->
        <display>
            <!-- Display name for the metric as used in the GUI -->
            <displayName>Node Power Usage</displayName>

            <!-- Brief description of the metric.. -->
            <description>Per node power usage</description>

            <!-- The type of metric, used by the GUI to group metrics -->
            <type>energy</type>

            <!-- The colour to use for the metric graphs for this metric -->
            <colour>green</colour>
        </display>

    </metric>


    <!-- id is the internal name for this metric, as used in the .map XML -->
    <metric id="com.allinea.metrics.compat.supermuc.energy">
        <!-- Specify whether this metric is always, default_yes, default_no, or never enabled -->
        <enabled>default_yes</enabled>
        <!-- The units this metric is measured in. -->
        <units>J</units>
        <!-- Data type used to store the sample values, uint64_t or double -->
        <dataType>uint64_t</dataType>
        <!-- The domain the metric is to be sampled in, only time is supported. -->
        <domain>time</domain>

        <onePerNode>true</onePerNode>

        <!-- Example source
             Specifies the source of data for this metric, i.e. a function in a
             shared library.

             The function signature depends on the dataType:
             - uint64_t:  int function(metric_id_t metricId,
                                       struct timespec* inCurrentSampleTime,
                                       uint64_t *outValue);
             - double:    int function(metric_id_t metricId,
                                       struct timespec* inCurrentSampleTime,
                                       double   *outValue);

            If the result is undefined for some reason the function may return
            the special sentinel value ~0 (unsigned integers) or Nan (floating point)

            Return value is 0 if success, -1 if failure (and set errno)

            If divideBySampleTime is true then the values returned by outValue
            will be divided by the sample interval to get the final value.  -->
        <source ref="com.allinea.metrics.compat.supermuc.energy_src"
                functionName="sample_IBM_energy_tot"
                divideBySampleTime="false"/>

        <!-- Display attributes used by the GUI -->
        <display>
            <!-- Display name for the metric as used in the GUI -->
            <displayName>Cumulative Energy</displayName>

            <!-- Brief description of the metric.. -->
            <description>Per node energy usage</description>

            <!-- The type of metric, used by the GUI to group metrics -->
            <type>energy</type>

            <!-- The colour to use for the metric graphs for this metric -->
            <colour>green</colour>
        </display>

    </metric>

    <!-- Metric group for interrupt metrics, used in the GUI -->
    <metricGroup id="smuc.energy">
        <!-- Display name for the group as use din the GUI -->
        <displayName>SuperMUC Energy</displayName>

        <!-- Brief description of the group -->
        <description>Energy data collected from SuperMUC systems</description>

        <!-- References to all the metrics included in the group -->
        <metric ref="com.allinea.metrics.compat.supermuc.power"/>
        <metric ref="com.allinea.metrics.compat.supermuc.energy"/>
    </metricGroup>

    <!-- Definition of the example source (metric plugin) used for the custom metric -->
    <source id="com.allinea.metrics.compat.supermuc.energy_src">
        <!-- File name of the sample metric plugin shared library -->
        <sharedLibrary>libsmucenergy.so</sharedLibrary>
    </source>

</metricdefinitions>
